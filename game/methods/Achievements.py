from game.methods.PlayerMethods import getBalance
from game.methods.PlayerMethods import getBusinesses
from game.methods.PlayerMethods import getPlayerSurprises 

from game.models.CommandPayments import CommandPayments
from game.models.PlayersBusiness import PlayersBusiness
from game.models.Actions import Actions
from game.models.Player import Player

from django.db.models import Sum
from django.db.models import Max
from django.db.models import Min
from django.db.models import Count
from django.db.models import Q
from django.db.models import F

class Achievement:
    def __init__(self, title, text):
        self._title = title
        self._text = text

    @property
    def title(self):
        return self._title

    @title.setter
    def title(self, value):
        self._title = value

    @property
    def text(self):
        return self._text

    @text.setter
    def text(self, value):
        self._text = value

def getAchievements( players ):

    # –ù–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–°—é—Ä–ø—Ä–∏–∑‚Äù –±–æ–ª—å—à–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
    SurpriseMan = (
        Player.objects
        .filter(
            visible = True
        )
        .annotate(
            num_surprise_actions = Count( 
                'actions__category', 
                filter = Q( actions__category='SURP' ) )
        )
        .order_by( '-num_surprise_actions' )
        .first()
    )

    # –ù–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–°—é—Ä–ø—Ä–∏–∑ –¥–ª—è –ö–ë‚Äù –±–æ–ª—å—à–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
    CommandSurpriseMan = (
        Player.objects
        .filter(
            visible = True
        )
        .annotate(
            num_surprise_actions = Count( 
                'actions__category', 
                filter = Q( 
                    actions__category   = 'SURP', 
                    actions__is_command = True 
                ) 
            )
        )
        .order_by( '-num_surprise_actions' )
        .first()
    )

    # –ü—Ä–∏–Ω–µ—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –ö–ë
    CommandLeader = (
        Player.objects
        .filter( 
            visible = True
        )
        .annotate(
            total_commandpayments = Sum('commandpayments__count'),
        )
        .order_by('-total_commandpayments')
        .first()
    )

    # –ù–∞–Ω–µ—Å —Å–∞–º—ã–π –±–æ–ª—å—à–∏–π —É—â–µ—Ä–± –ö–ë
    EternalIntern = (
        Player.objects
        .filter( 
            visible = True 
        )
        .annotate(
            total_commandpayments = Sum(
                'commandpayments__count', 
                filter = Q( commandpayments__lt=0 ) 
            ),            
        )
        .order_by('-total_commandpayments')
        .first()
    )

    # –í–ª–æ–∂–∏–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –≤ –ö–ë
    CommandSource = (
        Player.objects
        .filter( 
            visible = True
        )
        .annotate(
            max_command_payments = Max('commandpayments__count')
        )
        .order_by('-max_command_payments')
        .first()
    )

    # –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ä–∞–∑ –≤—ã–≤–æ–¥–∏–ª –¥–µ–Ω—å–≥–∏ –∏–∑ –ö–ë
    ShipRunner = (
        Player.objects
        .filter(
            visible = True,
            commandpayments__count__lt = 0
        )
        .annotate(
            sum_count = Max( F('commandpayments__count') )
        )
        .order_by('-sum_count')
        .first()
    )

    # –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ä–∞–∑ –ø–æ–ª—É—á–∏–ª –¥–µ—Ñ–æ–ª—Ç
    DefoultMan = (
        Player.objects
        .filter( 
            visible = True 
        )
        .annotate(
            defoult_count = Count(
                'playersbusiness', 
                filter = Q(playersbusiness__status='DEFOULT')
            )
        )
        .filter(
            defoult_count__gt = 0
        )
        .order_by('-defoult_count')
        .first()
    )

    # –ó–∞—Ä–∞–±–æ—Ç–∞–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∏–∑–Ω–µ—Å–µ
    BornBusinessman = (
        Player.objects
        .filter(
            visible = True            
        )
        .annotate(
            earnings = Sum('playersbusiness__businesspayments__count')
        )
        .first()
    )

    # –°–∞–º—ã–π —É–±—ã—Ç–æ—á–Ω—ã–µ –±–∏–∑–Ω–µ—Å—ã
    BadLuckBusinessman = (
        Player.objects
        .filter(
            visible = True,
            playersbusiness__businesspayments__count__lt = 0
        )
        .annotate(
            earnings = Sum('playersbusiness__businesspayments__count')
        )
        .first()
    )

    # –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏–Ω—Ñ–ª—è—Ü–∏–π
    InflationCaller = (
        Player.objects
        .filter( 
            visible = True 
        )
        .annotate(
            inflation_count = Count(
                'actions', 
                filter = Q(actions__category='INFL')
            )
        )
        .filter(
            inflation_count__gt = 0
        )
        .order_by('-inflation_count')
        .first()
    )

    # –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö –∏ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –±–∏–∑–Ω–µ—Å–æ–≤
    MarketTrader = (
        Player.objects
        .filter(
            visible = True
        )
        .annotate(
            sold_count = Count(
                'playersbusiness', 
                filter = Q(playersbusiness__status='SOLD')
            )
        )
        .order_by('-sold_count')
        .first()

    )

    # –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ —Å—é—Ä–ø—Ä–∏–∑–∞—Ö
    LuckyMan = (
        Player.objects
        .filter( 
            visible = True 
        )
        .annotate( 
            surprise_count = Sum(
                'actions__count', 
                filter = Q(actions__category='SURP')
            )
        )
        .filter(
            surprise_count__gt = 0
        )
        .order_by('-surprise_count')
        .first()
    )

    # –ü–æ—Ç–µ—Ä—è–ª –Ω–∞ —Å—é—Ä–ø—Ä–∏–∑–∞—Ö –±–æ–ª—å—à–µ –≤—Å–µ—Ö 
    UnLuckyMan = (
        Player.objects
        .filter( 
            visible = True 
        )
        .annotate( 
            surprise_count = Sum(
                'actions__count', 
                filter = Q( actions__category = 'SURP' )
            )
        )
        .filter(
            surprise_count__lt = 0
        )
        .order_by('-surprise_count')
        .first()
    )

    # –ó–∞—Ä–∞–±–æ—Ç–∞–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥
    WarrenBaffet = (
        Player.objects
        .filter( 
            visible = True 
        )
        .annotate( 
            count_sum = Sum('actions__count') + Sum('playersbusiness__businesspayments__count')
        )
        .filter(
            count_sum__gt = 0
        )
        .order_by('-count_sum')
        .first()
    )

    # –°–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∫–æ–ª-–≤–æ Action
    ActiveBro = (
        Player.objects
        .filter( 
            visible = True
        )
        .annotate( 
            actions_count = Count('actions')
        )
        .filter(
            actions_count__gt = 0
        )
        .order_by('-actions_count')
        .first()
    )


    

    # Empty achievements list
    Achievements = {}
    for player in players:

        achievements_list = []

        if player == SurpriseMan:
            achievements_list.append(
                Achievement( 
                    title = "–ß–µ–ª–æ–≤–µ–∫ –°—é—Ä–ø—Ä–∏–∑ üéÅ",
                    text  = "–ë–æ–ª—å—à–µ –≤—Å–µ—Ö –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –°—é—Ä–ø—Ä–∏–∑"
                )
            )   

        if player == CommandSurpriseMan:
            achievements_list.append(
                Achievement( 
                    title = "–ö–æ–º–∞–Ω–¥–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑ üéÅ",
                    text  = "–ü–æ–ª—É—á–∏–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å—é—Ä–ø—Ä–∏–∑–æ–≤ –¥–ª—è –ö–ë"
                )
            )
            
        if player == CommandLeader:
            achievements_list.append(
                Achievement( 
                    title = "–ö–æ–º–∞–Ω–¥–Ω—ã–π –ª–∏–¥–µ—Ä ü¶æ",
                    text  = "–ü—Ä–∏–Ω–µ—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –ö–ë"
                )
            )

        if player == EternalIntern:
            achievements_list.append(
                Achievement( 
                    title = "–í–µ—á–Ω—ã–π —Å—Ç–∞–∂–µ—Ä üë®üèº‚Äçüéì",
                    text  = "–ù–∞–Ω–µ—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —É–±—ã—Ç–∫–æ–≤ –¥–ª—è –ö–ë"
                )
            )

        if player == CommandSource:
            achievements_list.append(
                Achievement( 
                    title = "–ö–æ–º–∞–Ω–¥–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ü§¥üèª",
                    text  = "–í–ª–æ–∂–∏–ª –±–æ–ª—å—à–µ –≤—Å–µ—Ö –≤ –ö–ë"
                )
            )

        if player == ShipRunner:
            achievements_list.append(
                Achievement( 
                    title = "–ë–µ–≥—É—â–∏–π —Å –∫–æ—Ä–∞–±–ª—è üèÉüèΩ‚Äç‚ôÇÔ∏è",
                    text  = "–í—ã–≤–µ–ª –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¥–µ–Ω–µ–≥"
                )
            )
        
        if player == DefoultMan:
            achievements_list.append(
                Achievement( 
                    title = "–î–µ—Ñ–æ–ª—Ç–ú—ç–Ω üôà",
                    text  = "–ù–∞–π–±–æ–ª—å—à–µ–µ –∫–æ–ª-–≤–æ –¥–µ—Ñ–æ–ª—Ç–æ–≤"
                )
            )

        if player == BornBusinessman:
            achievements_list.append(
                Achievement( 
                    title = "–ü—Ä–∏—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å–º–µ–Ω üíµ",
                    text  = "–ó–∞—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –±–∏–∑–Ω–µ—Å–µ –±–æ–ª—å—à–µ –≤—Å–µ—Ö"
                )
            )

        if player == BadLuckBusinessman:
            achievements_list.append(
                Achievement( 
                    title = "–ù–µ–ë–∏–∑–Ω–µ—Å–º–µ–Ω ü™´",
                    text  = "–ü–æ—Ç–µ—Ä—è–ª –Ω–∞ –±–∏–∑–Ω–µ—Å–µ –±–æ–ª—å—à–µ –≤—Å–µ—Ö"
                )
            )

        if player == InflationCaller:
            achievements_list.append(
                Achievement( 
                    title = "–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –∏–Ω—Ñ–ª—è—Ü–∏–π üìàüìâ",
                    text  = "–ò–Ω—Ñ–ª—è—Ü–∏—è –Ω–∞—Å—Ç–∏–≥–∞–µ—Ç –≤–∞—Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ"
                )
            )

        if player == MarketTrader:
            achievements_list.append(
                Achievement( 
                    title = "–ö–∞–∫ –Ω–∞ —Ä—ã–Ω–∫–µ üõí",
                    text  = "–ü—Ä–æ–¥–∞–ª –±–æ–ª—å—à–µ –≤—Å–µ—Ö –±–∏–∑–Ω–µ—Å–æ–≤"
                )
            )

        if player == LuckyMan:
            achievements_list.append(
                Achievement( 
                    title = "–ß–µ–ª–æ–≤–µ–∫ —É–¥–∞—á–∏ ü™¨",
                    text  = "–ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ —Å—é—Ä–ø—Ä–∏–∑–∞—Ö"
                )
            )

        if player == UnLuckyMan:
            achievements_list.append(
                Achievement( 
                    title = "–ß–µ–ª–æ–≤–µ–∫ –ù–ï—É–¥–∞—á–∏ ü™Ü",
                    text  = "–ü–æ—Ç–µ—Ä—è–ª –Ω–∞ —Å—é—Ä–ø—Ä–∏–∑–∞—Ö –±–æ–ª—å—à–µ –≤—Å–µ—Ö "
                )
            )

        if player == WarrenBaffet:
            achievements_list.append(
                Achievement( 
                    title = "Warren Baffet ‚≠êÔ∏è",
                    text  = "–ó–∞—Ä–∞–±–æ—Ç–∞–ª –±–æ–ª—å—à–µ –≤—Å–µ—Ö –¥–µ–Ω–µ–≥"
                )
            )

        if player == ActiveBro:
            achievements_list.append(
                Achievement( 
                    title = "–ê–∫—Ç–∏–≤ –ë—Ä–æ üßóüèº‚Äç‚ôÇÔ∏è",
                    text  = "–°–¥–µ–ª–∞–ª –±–æ–ª—å—à–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π"
                )
            )


        Achievements[player] = achievements_list

    return Achievements
